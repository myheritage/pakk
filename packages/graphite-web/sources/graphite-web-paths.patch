diff -uNr graphite-web-0.9.9.orig/conf/graphite.wsgi.example graphite-web-0.9.9/conf/graphite.wsgi.example
--- graphite-web-0.9.9.orig/conf/graphite.wsgi.example	2011-09-30 03:51:29.000000000 +0000
+++ graphite-web-0.9.9/conf/graphite.wsgi.example	2012-04-23 17:56:13.870414813 +0000
@@ -1,5 +1,4 @@
 import os, sys
-sys.path.append('/opt/graphite/webapp')
 os.environ['DJANGO_SETTINGS_MODULE'] = 'graphite.settings'
 
 import django.core.handlers.wsgi
diff -uNr graphite-web-0.9.9.orig/examples/example-graphite-vhost.conf graphite-web-0.9.9/examples/example-graphite-vhost.conf
--- graphite-web-0.9.9.orig/examples/example-graphite-vhost.conf	2011-10-04 04:14:08.000000000 +0000
+++ graphite-web-0.9.9/examples/example-graphite-vhost.conf	2012-04-23 17:57:02.724588569 +0000
@@ -14,26 +14,26 @@
 
 # XXX You need to set this up!
 # Read http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives#WSGISocketPrefix
-WSGISocketPrefix /etc/httpd/wsgi/
+WSGISocketPrefix /var/run/wsgi
 
 <VirtualHost *:80>
         ServerName graphite
-        DocumentRoot "/opt/graphite/webapp"
-        ErrorLog /opt/graphite/storage/log/webapp/error.log
-        CustomLog /opt/graphite/storage/log/webapp/access.log common
+        DocumentRoot "/usr/share/graphite-web/webapp"
+        ErrorLog /var/log/httpd/graphite/error.log
+        CustomLog /var/log/httpd/graphite/access.log common
 
         # I've found that an equal number of processes & threads tends
         # to show the best performance for Graphite (ymmv).
-        WSGIDaemonProcess graphite processes=5 threads=5 display-name='%{GROUP}' inactivity-timeout=120
+        WSGIDaemonProcess graphite user=graphite-web group=graphite-web processes=5 threads=5 display-name='%{GROUP}' inactivity-timeout=120
         WSGIProcessGroup graphite
         WSGIApplicationGroup %{GLOBAL}
-        WSGIImportScript /opt/graphite/conf/graphite.wsgi process-group=graphite application-group=%{GLOBAL}
+        WSGIImportScript /usr/share/graphite-web/graphite-web.wsgi process-group=graphite application-group=%{GLOBAL}
 
         # XXX You will need to create this file! There is a graphite.wsgi.example
         # file in this directory that you can safely use, just copy it to graphite.wgsi
-        WSGIScriptAlias / /opt/graphite/conf/graphite.wsgi 
+        WSGIScriptAlias / /usr/share/graphite-web/graphite-web.wsgi 
 
-        Alias /content/ /opt/graphite/webapp/content/
+        Alias /content/ /usr/share/graphite-web/webapp/content/
         <Location "/content/">
                 SetHandler None
         </Location>
@@ -42,16 +42,9 @@
         # must change @DJANGO_ROOT@ to be the path to your django
         # installation, which is probably something like:
         # /usr/lib/python2.6/site-packages/django
-        Alias /media/ "@DJANGO_ROOT@/contrib/admin/media/"
+        Alias /media/ "/usr/lib/python2.6/site-packages/django/contrib/admin/media"
         <Location "/media/">
                 SetHandler None
         </Location>
 
-        # The graphite.wsgi file has to be accessible by apache. It won't
-        # be visible to clients because of the DocumentRoot though.
-        <Directory /opt/graphite/conf/>
-                Order deny,allow
-                Allow from all
-        </Directory>
-
 </VirtualHost>
diff -uNr graphite-web-0.9.9.orig/webapp/graphite/metrics/search.py graphite-web-0.9.9/webapp/graphite/metrics/search.py
--- graphite-web-0.9.9.orig/webapp/graphite/metrics/search.py	2011-09-30 03:51:29.000000000 +0000
+++ graphite-web-0.9.9/webapp/graphite/metrics/search.py	2012-04-23 17:56:13.873414319 +0000
@@ -11,7 +11,7 @@
     self.index_path = index_path
     if not os.path.exists(index_path):
       open(index_path, 'w').close() # touch the file to prevent re-entry down this code path
-      build_index_path = os.path.join(settings.GRAPHITE_ROOT, "bin/build-index.sh")
+      build_index_path = '/usr/bin/graphite-build-index'
       retcode = subprocess.call(build_index_path)
       if retcode != 0:
         log.exception("Couldn't build index file %s" % index_path)
diff -uNr graphite-web-0.9.9.orig/webapp/graphite/settings.py graphite-web-0.9.9/webapp/graphite/settings.py
--- graphite-web-0.9.9.orig/webapp/graphite/settings.py	2011-10-05 08:49:54.000000000 +0000
+++ graphite-web-0.9.9/webapp/graphite/settings.py	2012-04-23 17:56:13.875442564 +0000
@@ -24,16 +24,16 @@
 WEB_DIR = dirname( abspath(__file__) ) + '/'
 WEBAPP_DIR = dirname( dirname(WEB_DIR) ) + '/'
 GRAPHITE_ROOT = dirname( dirname(WEBAPP_DIR) ) + '/'
-CONTENT_DIR = WEBAPP_DIR + 'content/'
+CONTENT_DIR = '/usr/share/graphite-web/content/'
 CSS_DIR = CONTENT_DIR + 'css/'
 THIRDPARTY_DIR = WEB_DIR + 'thirdparty/'
 
-CONF_DIR = os.environ.get('GRAPHITE_CONF_DIR', GRAPHITE_ROOT + 'conf/')
-STORAGE_DIR = os.environ.get('GRAPHITE_STORAGE_DIR', GRAPHITE_ROOT + 'storage/')
+CONF_DIR = '/etc/graphite-web/'
+STORAGE_DIR = '/var/lib/graphite-web/'
 LISTS_DIR = STORAGE_DIR + 'lists/'
 INDEX_FILE = STORAGE_DIR + 'index'
 WHITELIST_FILE = LISTS_DIR + 'whitelist'
-LOG_DIR = STORAGE_DIR + 'log/webapp/'
+LOG_DIR = '/var/log/graphite-web/'
 
 CLUSTER_SERVERS = []
 
@@ -44,8 +44,9 @@
 # local_settings.py, instead you should override DATA_DIRS
 # to list all directories that should be searched for files
 # of a supported format.
-WHISPER_DIR = STORAGE_DIR + 'whisper/'
-RRD_DIR = STORAGE_DIR + 'rrd/'
+CARBON_DIR = '/var/lib/carbon/'
+WHISPER_DIR = CARBON_DIR + 'whisper/'
+RRD_DIR = CARBON_DIR + 'rrd/'
 try:
   import rrdtool
   DATA_DIRS = [WHISPER_DIR, RRD_DIR]
